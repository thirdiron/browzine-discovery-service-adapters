version: 2

settings: &settings
  shell: /bin/bash --login
  docker:
    - image: thirdiron/tici:node-12-lts
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD

build-environment: &build-environment
  name: Build Environment
  command: ~/project/.circleci/build.sh

package-cache: &package-cache
  key: package-cache-{{ checksum "package.json" }}

jobs:
  build:
    <<: *settings
    steps:
      - checkout
      - restore_cache:
          <<: *package-cache
      - run:
          <<: *build-environment
      - save_cache:
          <<: *package-cache
          paths:
            - node_modules
      - run:
          name: Lint
          command: |
            . ~/.nvm/nvm.sh
            npm run lint
      - run:
          name: Automated Tests
          command: |
            . ~/.nvm/nvm.sh
            npm test
  deploy-hotfix:
    <<: *settings
    steps:
      - checkout
      - restore_cache:
          <<: *package-cache
      - run:
          <<: *build-environment
      - save_cache:
          <<: *package-cache
          paths:
            - node_modules
      - run:
          name: Deploy Hotfix Summon
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-summon-hotfix
      - run:
          name: Deploy Hotfix 360 Core
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-360-core-hotfix
      - run:
          name: Deploy Hotfix Primo
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-primo-hotfix
  deploy-feature:
    <<: *settings
    steps:
      - checkout
      - restore_cache:
          <<: *package-cache
      - run:
          <<: *build-environment
      - save_cache:
          <<: *package-cache
          paths:
            - node_modules
      - run:
          name: Deploy Feature Summon
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-summon-feature
      - run:
          name: Deploy Feature 360 Core
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-360-core-feature
      - run:
          name: Deploy Feature Primo
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-primo-feature
  deploy-develop:
    <<: *settings
    steps:
      - checkout
      - restore_cache:
          <<: *package-cache
      - run:
          <<: *build-environment
      - save_cache:
          <<: *package-cache
          paths:
            - node_modules
      - run:
          name: Deploy Develop Summon
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-summon-develop
      - run:
          name: Deploy Develop 360 Core
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-360-core-develop
      - run:
          name: Deploy Develop Primo
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-primo-develop
  deploy-master:
    <<: *settings
    steps:
      - checkout
      - restore_cache:
          <<: *package-cache
      - run:
          <<: *build-environment
      - save_cache:
          <<: *package-cache
          paths:
            - node_modules
      - run:
          name: Deploy Master Summon
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-summon-master
      - run:
          name: Deploy Master 360 Core
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-360-core-master
      - run:
          name: Deploy Master Primo
          command: |
            . ~/.nvm/nvm.sh
            npm run deploy-primo-master
  renogen:
    docker:
      - image: cimg/node:12.18
    steps:
      - add_ssh_keys
      - run:
          name: create ssh directory
          command: mkdir ~/.ssh/
      - run:
          name: add github.com to known_hosts
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone release_notes_generator repository
          command: git clone git@github.com:thirdiron/release_notes_generator.git .
      - run:
          name: Install release_notes_generator dependencies
          command: npm ci
      - run:
          name: Build release_notes_generator
          command: npm run build
      - run:
          name: Generate release notes
          command: npm run start -- browzine-discovery-service-adapters

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - deploy-hotfix:
          requires:
            - build
          filters:
            branches:
              only: /hotfix\/.*/
      - deploy-feature:
          requires:
            - build
          filters:
            branches:
              only: /feature\/.*/
      - deploy-develop:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy-master:
          requires:
            - build
          filters:
            branches:
              only: master
      - renogen:
           requires:
             - deploy-develop
           filters:
             branches:
               only:
                 - develop

experimental:
  notify:
    branches:
      only:
        - master
        - develop
